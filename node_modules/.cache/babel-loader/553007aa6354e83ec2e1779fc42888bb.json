{"ast":null,"code":"import * as types from \"./actiontypes\";\nimport axios from \"axios\";\nconst baseUrl = `http://localhost:8011`; //Add any dispatches that send data to a reducer below\n\nexport const allBucketList = data => ({\n  type: types.BUCKETLIST,\n  bucketList: data\n});\nexport const dispatchGetAllBuckets = () => {\n  return function (dispatch, getState) {\n    axios.get(`${baseUrl}/getAllBuckets`).then(data => {\n      dispatch(allBucketList(data.data.data));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const dispatchBucket = (bucketName, listItems) => {\n  return function (dispatch, getState) {\n    axios.post(`${baseUrl}/addBucket`, {\n      bucketName: bucketName\n    }).then(data => {\n      console.log(data);\n      let t = [...listItems];\n      t.push(data.data.data);\n      console.log(t);\n      dispatch(allBucketList(t));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const dispatchDeleteBucket = bucketId => {\n  return function (dispatch, getState) {\n    axios.post(`${baseUrl}/deleteBucket`, {\n      bucketID: bucketId\n    }).then(() => {\n      dispatch(dispatchGetAllBuckets());\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const dispatchGetTodoList = bucketId => {\n  return function (dispatch, getState) {\n    axios.get(`${baseUrl}/getAllBucketTodos?bucketID=${bucketId}`).then(() => {\n      dispatch(allBucketList());\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const dispatchToDoList = (taskName, bucketId, listItems) => {\n  return function (dispatch, getState) {\n    axios.post(`${baseUrl}/addToDo`, {\n      taskName: taskName,\n      bucketID: bucketId\n    }).then(data => {\n      let t = [];\n\n      if (listItems) {\n        t = [...listItems];\n      }\n\n      t.push(data.data.data);\n      console.log(t);\n      dispatch(allBucketList(t));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["/home/info/Desktop/myProject/to-do-bucket-lists/frontend/src/Redux/Actions/Actions.js"],"names":["types","axios","baseUrl","allBucketList","data","type","BUCKETLIST","bucketList","dispatchGetAllBuckets","dispatch","getState","get","then","catch","error","console","log","dispatchBucket","bucketName","listItems","post","t","push","dispatchDeleteBucket","bucketId","bucketID","dispatchGetTodoList","dispatchToDoList","taskName"],"mappings":"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","sourcesContent":["import * as types from \"./actiontypes\";\n\nimport axios from \"axios\";\nconst baseUrl=`http://localhost:8011`\n\n//Add any dispatches that send data to a reducer below\nexport const allBucketList = (data) => ({\n  type: types.BUCKETLIST,\n  bucketList:data\n});\n\nexport const dispatchGetAllBuckets = () => {\n  return function(dispatch, getState) {\n    axios.get(`${baseUrl}/getAllBuckets`).then((data)=>{\n      dispatch(allBucketList(data.data.data))\n    }).catch((error)=>{\n      console.log(error)\n    })\n  };\n}\nexport const dispatchBucket = (bucketName,listItems) => {\n  return function(dispatch, getState) {\n    axios.post(`${baseUrl}/addBucket`,{bucketName:bucketName}).then((data)=>{\n      console.log(data);\n      let t = [...listItems];\n      t.push(data.data.data);\n      console.log(t);    \n      dispatch(allBucketList(t))\n    }).catch((error)=>{\n      console.log(error)\n    })\n  };\n}\nexport const dispatchDeleteBucket = (bucketId) => {\n  return function(dispatch, getState) {\n    axios.post(`${baseUrl}/deleteBucket`,{bucketID:bucketId}).then(()=>{\n      dispatch(dispatchGetAllBuckets())\n    }).catch((error)=>{\n      console.log(error)\n    })\n  };\n}\n\nexport const dispatchGetTodoList = (bucketId) => {\n  return function(dispatch, getState) {\n    axios.get(`${baseUrl}/getAllBucketTodos?bucketID=${bucketId}`).then(()=>{\n      dispatch(allBucketList())\n    }).catch((error)=>{\n      console.log(error)\n    })\n  };\n}\nexport const dispatchToDoList = (taskName,bucketId,listItems) => {\n  return function(dispatch, getState) {\n    axios.post(`${baseUrl}/addToDo`,{taskName:taskName,bucketID:bucketId}).then((data)=>{\n      let t = [];\n      if(listItems){\n        t = [...listItems];      \n      }\n      t.push(data.data.data);\n      console.log(t);    \n      dispatch(allBucketList(t))\n    }).catch((error)=>{\n      console.log(error)\n    })\n  };\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}