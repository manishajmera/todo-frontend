{"ast":null,"code":"var _jsxFileName = \"/home/info/Desktop/myProject/to-do-bucket-lists/frontend/src/Components/HeadingWithList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ListItems from \"./ListItems\";\nimport { connect } from \"react-redux\";\nimport { dispatchGetAllBuckets, dispatchBucket, dispatchDeleteBucket, dispatchGetTodoList, dispatchToDoList } from \"../Redux/Actions/Actions\";\nimport { useParams } from \"react-router-dom\";\n\nconst HeadingWithList = ({\n  listItems,\n  dispatchGetAllBuckets,\n  typePlaceholder,\n  type,\n  dispatchBucket,\n  dispatchDeleteBucket,\n  dispatchGetTodoList,\n  dispatchToDoList\n}) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) dispatchGetTodoList(id);else dispatchGetAllBuckets();\n  }, [id, dispatchGetAllBuckets, dispatchGetTodoList]);\n\n  const handelOnKeyDown = e => {\n    if (e.which == \"13\") {\n      if (inputValue.trim() === \"\") alert(\"can't create empty bucket\");else {\n        setInputValue(\"\");\n\n        if (id) {\n          dispatchToDoList(inputValue, id, listItems);\n        } else {\n          dispatchBucket(inputValue, listItems);\n        }\n      }\n    }\n  };\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleClick = (e, id) => {\n    dispatchDeleteBucket(id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, type), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: typePlaceholder,\n    type: \"text\",\n    onKeyDown: handelOnKeyDown,\n    onChange: handleChange,\n    value: inputValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), listItems && listItems.length > 0 && /*#__PURE__*/React.createElement(ListItems, {\n    listItems: listItems,\n    listType: \"link\",\n    handleAction: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    listItems: state.allBucketList\n  };\n}\n\nconst mapDispatchToProps = {\n  dispatchGetAllBuckets,\n  dispatchBucket,\n  dispatchDeleteBucket,\n  dispatchGetTodoList,\n  dispatchToDoList\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HeadingWithList);","map":{"version":3,"sources":["/home/info/Desktop/myProject/to-do-bucket-lists/frontend/src/Components/HeadingWithList.js"],"names":["React","useEffect","useState","ListItems","connect","dispatchGetAllBuckets","dispatchBucket","dispatchDeleteBucket","dispatchGetTodoList","dispatchToDoList","useParams","HeadingWithList","listItems","typePlaceholder","type","inputValue","setInputValue","id","handelOnKeyDown","e","which","trim","alert","handleChange","target","value","handleClick","length","mapStateToProps","state","allBucketList","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ListItems from \"./ListItems\";\nimport { connect } from \"react-redux\";\nimport {\n  dispatchGetAllBuckets,\n  dispatchBucket,\n  dispatchDeleteBucket,\n  dispatchGetTodoList,\n  dispatchToDoList,\n} from \"../Redux/Actions/Actions\";\nimport { useParams } from \"react-router-dom\";\n\nconst HeadingWithList = ({\n  listItems,\n  dispatchGetAllBuckets,\n  typePlaceholder,\n  type,\n  dispatchBucket,\n  dispatchDeleteBucket,\n  dispatchGetTodoList,\n  dispatchToDoList\n}) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  let { id } = useParams();\n  useEffect(() => {\n    if (id) dispatchGetTodoList(id);\n    else dispatchGetAllBuckets();\n  }, [id, dispatchGetAllBuckets, dispatchGetTodoList]);\n  const handelOnKeyDown = (e) => {\n    if (e.which == \"13\") {\n      if (inputValue.trim() === \"\") alert(\"can't create empty bucket\");\n      else {\n        setInputValue(\"\");\n        if (id) {\n          dispatchToDoList(inputValue, id, listItems);\n        } else {\n          dispatchBucket(inputValue, listItems);\n        }\n      }\n    }\n  };\n  const handleChange = (e) => {\n    setInputValue(e.target.value);\n  };\n  const handleClick = (e, id) => {\n    dispatchDeleteBucket(id);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>{type}</h1>\n      <input\n        placeholder={typePlaceholder}\n        type=\"text\"\n        onKeyDown={handelOnKeyDown}\n        onChange={handleChange}\n        value={inputValue}\n      />\n      {listItems && listItems.length>0 && (\n        <ListItems\n          listItems={listItems}\n          listType=\"link\"\n          handleAction={handleClick}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    listItems: state.allBucketList,\n  };\n}\n\nconst mapDispatchToProps = {\n  dispatchGetAllBuckets,\n  dispatchBucket,\n  dispatchDeleteBucket,\n  dispatchGetTodoList,\n  dispatchToDoList,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeadingWithList);\n"]},"metadata":{},"sourceType":"module"}