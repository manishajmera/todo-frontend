{"ast":null,"code":"var _jsxFileName = \"/home/info/Desktop/myProject/to-do-bucket-lists/frontend/src/Components/HeadingWithList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ListItems from \"./ListItems\";\nimport { connect } from \"react-redux\";\nimport { dispatchGetAllBuckets, dispatchBucket, dispatchDeleteBucket, dispatchGetTodoList, dispatchToDoList, allBucketList, dispatchDeleteTodo } from \"../Redux/Actions/Actions\";\nimport { useParams } from \"react-router-dom\";\n\nconst HeadingWithList = ({\n  listItems,\n  dispatchGetAllBuckets,\n  typePlaceholder,\n  type,\n  dispatchBucket,\n  dispatchDeleteBucket,\n  dispatchGetTodoList,\n  dispatchToDoList,\n  allBucketList,\n  dispatchDeleteTodo,\n  dispatchUpdateTodo\n}) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    allBucketList([]);\n\n    if (id) {\n      id = id.split('_');\n      dispatchGetTodoList(id[1]);\n    } else dispatchGetAllBuckets();\n  }, [id, dispatchGetAllBuckets, dispatchGetTodoList]);\n\n  const handelOnKeyDown = e => {\n    if (e.which == \"13\") {\n      if (inputValue.trim() === \"\") alert(\"can't create empty bucket\");else {\n        setInputValue(\"\");\n\n        if (id) {\n          id = id.split('_');\n          console.log(\"idasdada\", id);\n          dispatchToDoList(inputValue, id[1], listItems);\n        } else {\n          dispatchBucket(inputValue, listItems);\n        }\n      }\n    }\n  };\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleAction = (e, type, bucketId, todoId) => {\n    switch (type) {\n      case \"deleteBucket\":\n        dispatchDeleteBucket(bucketId);\n        break;\n\n      case \"deleteTodo\":\n        dispatchDeleteTodo(todoId, bucketId);\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, type), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: typePlaceholder,\n    type: \"text\",\n    onKeyDown: handelOnKeyDown,\n    onChange: handleChange,\n    value: inputValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), listItems && listItems.length > 0 && /*#__PURE__*/React.createElement(ListItems, {\n    listItems: listItems,\n    listType: id ? \"\" : \"link\",\n    handleAction: handleAction,\n    updateTodo: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    listItems: state.allBucketList\n  };\n}\n\nconst mapDispatchToProps = {\n  dispatchGetAllBuckets,\n  dispatchBucket,\n  dispatchDeleteBucket,\n  dispatchGetTodoList,\n  dispatchToDoList,\n  allBucketList,\n  dispatchDeleteTodo,\n  dispatchUpdateTodo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HeadingWithList);","map":{"version":3,"sources":["/home/info/Desktop/myProject/to-do-bucket-lists/frontend/src/Components/HeadingWithList.js"],"names":["React","useEffect","useState","ListItems","connect","dispatchGetAllBuckets","dispatchBucket","dispatchDeleteBucket","dispatchGetTodoList","dispatchToDoList","allBucketList","dispatchDeleteTodo","useParams","HeadingWithList","listItems","typePlaceholder","type","dispatchUpdateTodo","inputValue","setInputValue","id","split","handelOnKeyDown","e","which","trim","alert","console","log","handleChange","target","value","handleAction","bucketId","todoId","length","updateTodo","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,qBADF,EAEEC,cAFF,EAGEC,oBAHF,EAIEC,mBAJF,EAKEC,gBALF,EAMEC,aANF,EAOEC,kBAPF,QAQO,0BARP;AASA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,eAAe,GAAG,CAAC;AACvBC,EAAAA,SADuB;AAEvBT,EAAAA,qBAFuB;AAGvBU,EAAAA,eAHuB;AAIvBC,EAAAA,IAJuB;AAKvBV,EAAAA,cALuB;AAMvBC,EAAAA,oBANuB;AAOvBC,EAAAA,mBAPuB;AAQvBC,EAAAA,gBARuB;AASvBC,EAAAA,aATuB;AAUvBC,EAAAA,kBAVuB;AAWvBM,EAAAA;AAXuB,CAAD,KAYlB;AACJ,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAI;AAAEkB,IAAAA;AAAF,MAASR,SAAS,EAAtB;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,aAAa,CAAC,EAAD,CAAb;;AACA,QAAIU,EAAJ,EAAQ;AACNA,MAAAA,EAAE,GAACA,EAAE,CAACC,KAAH,CAAS,GAAT,CAAH;AACAb,MAAAA,mBAAmB,CAACY,EAAE,CAAC,CAAD,CAAH,CAAnB;AACD,KAHD,MAIKf,qBAAqB;AAC3B,GAPQ,EAON,CAACe,EAAD,EAAKf,qBAAL,EAA4BG,mBAA5B,CAPM,CAAT;;AAQA,QAAMc,eAAe,GAAIC,CAAD,IAAO;AAC7B,QAAIA,CAAC,CAACC,KAAF,IAAW,IAAf,EAAqB;AACnB,UAAIN,UAAU,CAACO,IAAX,OAAsB,EAA1B,EAA8BC,KAAK,CAAC,2BAAD,CAAL,CAA9B,KACK;AACHP,QAAAA,aAAa,CAAC,EAAD,CAAb;;AACA,YAAIC,EAAJ,EAAQ;AACNA,UAAAA,EAAE,GAACA,EAAE,CAACC,KAAH,CAAS,GAAT,CAAH;AACAM,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBR,EAAvB;AACAX,UAAAA,gBAAgB,CAACS,UAAD,EAAaE,EAAE,CAAC,CAAD,CAAf,EAAoBN,SAApB,CAAhB;AACD,SAJD,MAIO;AACLR,UAAAA,cAAc,CAACY,UAAD,EAAaJ,SAAb,CAAd;AACD;AACF;AACF;AACF,GAdD;;AAeA,QAAMe,YAAY,GAAIN,CAAD,IAAO;AAC1BJ,IAAAA,aAAa,CAACI,CAAC,CAACO,MAAF,CAASC,KAAV,CAAb;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAG,CAACT,CAAD,EAAIP,IAAJ,EAASiB,QAAT,EAAkBC,MAAlB,KAA6B;AAChD,YAAOlB,IAAP;AACE,WAAK,cAAL;AACET,QAAAA,oBAAoB,CAAC0B,QAAD,CAApB;AACA;;AACF,WAAK,YAAL;AACEtB,QAAAA,kBAAkB,CAACuB,MAAD,EAAQD,QAAR,CAAlB;AACA;AANJ;AAUD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKjB,IAAL,CADF,eAEE;AACE,IAAA,WAAW,EAAED,eADf;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAEO,eAHb;AAIE,IAAA,QAAQ,EAAEO,YAJZ;AAKE,IAAA,KAAK,EAAEX,UALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASGJ,SAAS,IAAIA,SAAS,CAACqB,MAAV,GAAiB,CAA9B,iBACC,oBAAC,SAAD;AACE,IAAA,SAAS,EAAErB,SADb;AAEE,IAAA,QAAQ,EAAEM,EAAE,GAAC,EAAD,GAAI,MAFlB;AAGE,IAAA,YAAY,EAAEY,YAHhB;AAIE,IAAA,UAAU,EAAEI,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADF;AAoBD,CA1ED;;AA4EA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLxB,IAAAA,SAAS,EAAEwB,KAAK,CAAC5B;AADZ,GAAP;AAGD;;AAED,MAAM6B,kBAAkB,GAAG;AACzBlC,EAAAA,qBADyB;AAEzBC,EAAAA,cAFyB;AAGzBC,EAAAA,oBAHyB;AAIzBC,EAAAA,mBAJyB;AAKzBC,EAAAA,gBALyB;AAMzBC,EAAAA,aANyB;AAOzBC,EAAAA,kBAPyB;AAQzBM,EAAAA;AARyB,CAA3B;AAWA,eAAeb,OAAO,CAACiC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C1B,eAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ListItems from \"./ListItems\";\nimport { connect } from \"react-redux\";\nimport {\n  dispatchGetAllBuckets,\n  dispatchBucket,\n  dispatchDeleteBucket,\n  dispatchGetTodoList,\n  dispatchToDoList,\n  allBucketList,\n  dispatchDeleteTodo\n} from \"../Redux/Actions/Actions\";\nimport { useParams } from \"react-router-dom\";\n\nconst HeadingWithList = ({\n  listItems,\n  dispatchGetAllBuckets,\n  typePlaceholder,\n  type,\n  dispatchBucket,\n  dispatchDeleteBucket,\n  dispatchGetTodoList,\n  dispatchToDoList,\n  allBucketList,\n  dispatchDeleteTodo,\n  dispatchUpdateTodo\n}) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  let { id } = useParams();\n  useEffect(() => {\n    allBucketList([]);\n    if (id) {\n      id=id.split('_');\n      dispatchGetTodoList(id[1]);\n    }\n    else dispatchGetAllBuckets();\n  }, [id, dispatchGetAllBuckets, dispatchGetTodoList]);\n  const handelOnKeyDown = (e) => {\n    if (e.which == \"13\") {\n      if (inputValue.trim() === \"\") alert(\"can't create empty bucket\");\n      else {\n        setInputValue(\"\");\n        if (id) {\n          id=id.split('_');\n          console.log(\"idasdada\",id)\n          dispatchToDoList(inputValue, id[1], listItems);\n        } else {\n          dispatchBucket(inputValue, listItems);\n        }\n      }\n    }\n  };\n  const handleChange = (e) => {\n    setInputValue(e.target.value);\n  };\n  const handleAction = (e, type,bucketId,todoId) => {\n    switch(type) {\n      case \"deleteBucket\":\n        dispatchDeleteBucket(bucketId);\n        break;\n      case \"deleteTodo\":\n        dispatchDeleteTodo(todoId,bucketId);\n        break;\n\n    }\n\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>{type}</h1>\n      <input\n        placeholder={typePlaceholder}\n        type=\"text\"\n        onKeyDown={handelOnKeyDown}\n        onChange={handleChange}\n        value={inputValue}\n      />\n      {listItems && listItems.length>0 && (\n        <ListItems\n          listItems={listItems}\n          listType={id?\"\":\"link\" }\n          handleAction={handleAction}\n          updateTodo={updateTodo}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    listItems: state.allBucketList,\n  };\n}\n\nconst mapDispatchToProps = {\n  dispatchGetAllBuckets,\n  dispatchBucket,\n  dispatchDeleteBucket,\n  dispatchGetTodoList,\n  dispatchToDoList,\n  allBucketList,\n  dispatchDeleteTodo,\n  dispatchUpdateTodo\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeadingWithList);\n"]},"metadata":{},"sourceType":"module"}