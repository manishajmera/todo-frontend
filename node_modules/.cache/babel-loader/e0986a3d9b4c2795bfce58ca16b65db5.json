{"ast":null,"code":"var _jsxFileName = \"/home/info/Desktop/myProject/to-do-bucket-lists/frontend/src/Components/ListItems.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nexport default function ListItems({\n  listItems,\n  listType,\n  handleAction,\n  updateTodo\n}) {\n  const [editBox, setEditBox] = useState('');\n\n  const handleChange = e => {\n    setEditBox({\n      id: editBox.id,\n      value: e.target.value\n    });\n  };\n\n  const handelKeyDown = e => {\n    if (e.which == \"13\") {\n      if (inputValue.trim() === \"\") alert(\"can't create empty todo\");else {\n        setEditBox(\"\");\n        updateTodo();\n      }\n    }\n\n    setEditBox({\n      id: editBox.id,\n      value: e.target.value\n    });\n  };\n\n  const bucketList = () => {\n    let h = [];\n    listItems.map((item, index) => {\n      h.push(listType ? /*#__PURE__*/React.createElement(Link, {\n        to: `/${item.title}_${item.bucketID}`,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, item.title), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => handleAction(e, \"deleteBucket\", item.bucketID),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, \"D\")) : /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }), \" \", item.title, \" \", /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => handleAction(e, \"deleteTodo\", item.bucketID, item.todoID),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, \"D\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => setEditBox({\n          id: item.todoID,\n          value: item.title\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, \"E\"), editBox.id == item.todoID && /*#__PURE__*/React.createElement(\"input\", {\n        value: editBox.value,\n        onChange: handleChange,\n        onKeyDown: handelKeyDown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 41\n        }\n      })));\n    });\n    return h;\n  };\n\n  return listItems ? /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }\n  }, bucketList()) : null;\n}","map":{"version":3,"sources":["/home/info/Desktop/myProject/to-do-bucket-lists/frontend/src/Components/ListItems.js"],"names":["React","useState","Link","ListItems","listItems","listType","handleAction","updateTodo","editBox","setEditBox","handleChange","e","id","value","target","handelKeyDown","which","inputValue","trim","alert","bucketList","h","map","item","index","push","title","bucketID","todoID"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ListItems({ listItems, listType, handleAction,updateTodo }) {\n  const [editBox,setEditBox]=useState('');\n  const handleChange = (e)=>{\n    setEditBox({\n      id:editBox.id,\n      value:e.target.value\n    })\n  }\n\n  const handelKeyDown = (e)=>{\n    if (e.which == \"13\") {\n      if (inputValue.trim() === \"\") alert(\"can't create empty todo\");\n      else {\n        setEditBox(\"\");\n        updateTodo();\n      }\n    }\n    setEditBox({\n      id:editBox.id,\n      value:e.target.value\n    })\n  }\n\n  const bucketList = () => {\n    let h = [];\n    listItems.map((item, index) => {\n      h.push(\n        listType ? (\n          <Link to={`/${item.title}_${item.bucketID}`} key={index}>\n            <li>{item.title}</li>\n            <button\n              onClick={(e) => handleAction(e, \"deleteBucket\", item.bucketID)}\n            >\n              D\n            </button>\n          </Link>\n        ) : (\n          <li key={index}>\n            <input type=\"checkbox\" /> {item.title}{\" \"}\n            <button onClick={(e) => handleAction(e, \"deleteTodo\",item.bucketID,item.todoID)}>D</button>{\" \"}\n            <button onClick={() => setEditBox({id:item.todoID,value:item.title})}>E</button>\n            {editBox.id==item.todoID && <input value={editBox.value} onChange={handleChange} onKeyDown={handelKeyDown}/>}\n          </li>\n        )\n      );\n    });\n    return h;\n  };\n  return listItems ? <ul className=\"list-unstyled\">{bucketList()}</ul> : null;\n}\n"]},"metadata":{},"sourceType":"module"}