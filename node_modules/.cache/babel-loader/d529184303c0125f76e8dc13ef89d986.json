{"ast":null,"code":"import * as types from \"./actiontypes\";\nimport axios from \"axios\"; //Add any dispatches that send data to a reducer below\n\nexport const allBucketList = data => ({\n  type: types.BUCKETLIST,\n  bucketList: data\n});\nexport const dispatchGetAllBuckets = () => {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8011/getAllBuckets').then(data => {\n      dispatch(allBucketList(data.data.data));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const dispatchBucket = (bucketName, listItems) => {\n  return function (dispatch, getState) {\n    axios.post('http://localhost:8011/addBucket', {\n      bucketName: bucketName\n    }).then(data => {\n      console.log(data);\n      let t = [...listItems];\n      t.push(data.data.data);\n      console.log(t);\n      dispatch(allBucketList(t));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const dispatchDeleteBucket = bucketId => {\n  return function (dispatch, getState) {\n    axios.post('http://localhost:8011/deleteBucket', {\n      bucketId: bucketId\n    }).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["/home/info/Desktop/myProject/to-do-bucket-lists/frontend/src/Redux/Actions/Actions.js"],"names":["types","axios","allBucketList","data","type","BUCKETLIST","bucketList","dispatchGetAllBuckets","dispatch","getState","get","then","catch","error","console","log","dispatchBucket","bucketName","listItems","post","t","push","dispatchDeleteBucket","bucketId"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AAEA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAIC,IAAD,KAAW;AACtCC,EAAAA,IAAI,EAAEJ,KAAK,CAACK,UAD0B;AAEtCC,EAAAA,UAAU,EAACH;AAF2B,CAAX,CAAtB;AAKP,OAAO,MAAMI,qBAAqB,GAAG,MAAM;AACzC,SAAO,UAASC,QAAT,EAAmBC,QAAnB,EAA6B;AAClCR,IAAAA,KAAK,CAACS,GAAN,CAAU,qCAAV,EAAiDC,IAAjD,CAAuDR,IAAD,IAAQ;AAC5DK,MAAAA,QAAQ,CAACN,aAAa,CAACC,IAAI,CAACA,IAAL,CAAUA,IAAX,CAAd,CAAR;AACD,KAFD,EAEGS,KAFH,CAEUC,KAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAJD;AAKD,GAND;AAOD,CARM;AASP,OAAO,MAAMG,cAAc,GAAG,CAACC,UAAD,EAAYC,SAAZ,KAA0B;AACtD,SAAO,UAASV,QAAT,EAAmBC,QAAnB,EAA6B;AAClCR,IAAAA,KAAK,CAACkB,IAAN,CAAW,iCAAX,EAA6C;AAACF,MAAAA,UAAU,EAACA;AAAZ,KAA7C,EAAsEN,IAAtE,CAA4ER,IAAD,IAAQ;AACjFW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACA,UAAIiB,CAAC,GAAG,CAAC,GAAGF,SAAJ,CAAR;AACAE,MAAAA,CAAC,CAACC,IAAF,CAAOlB,IAAI,CAACA,IAAL,CAAUA,IAAjB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ;AACAZ,MAAAA,QAAQ,CAACN,aAAa,CAACkB,CAAD,CAAd,CAAR;AACD,KAND,EAMGR,KANH,CAMUC,KAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KARD;AASD,GAVD;AAWD,CAZM;AAaP,OAAO,MAAMS,oBAAoB,GAAIC,QAAD,IAAc;AAChD,SAAO,UAASf,QAAT,EAAmBC,QAAnB,EAA6B;AAClCR,IAAAA,KAAK,CAACkB,IAAN,CAAW,oCAAX,EAAgD;AAACI,MAAAA,QAAQ,EAACA;AAAV,KAAhD,EAAqEZ,IAArE,CAA2ER,IAAD,IAAQ;AAChFW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACD,KAFD,EAEGS,KAFH,CAEUC,KAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAJD;AAKD,GAND;AAOD,CARM","sourcesContent":["import * as types from \"./actiontypes\";\n\nimport axios from \"axios\";\n\n//Add any dispatches that send data to a reducer below\nexport const allBucketList = (data) => ({\n  type: types.BUCKETLIST,\n  bucketList:data\n});\n\nexport const dispatchGetAllBuckets = () => {\n  return function(dispatch, getState) {\n    axios.get('http://localhost:8011/getAllBuckets').then((data)=>{\n      dispatch(allBucketList(data.data.data))\n    }).catch((error)=>{\n      console.log(error)\n    })\n  };\n}\nexport const dispatchBucket = (bucketName,listItems) => {\n  return function(dispatch, getState) {\n    axios.post('http://localhost:8011/addBucket',{bucketName:bucketName}).then((data)=>{\n      console.log(data);\n      let t = [...listItems];\n      t.push(data.data.data);\n      console.log(t);    \n      dispatch(allBucketList(t))\n    }).catch((error)=>{\n      console.log(error)\n    })\n  };\n}\nexport const dispatchDeleteBucket = (bucketId) => {\n  return function(dispatch, getState) {\n    axios.post('http://localhost:8011/deleteBucket',{bucketId:bucketId}).then((data)=>{\n      console.log(data);\n    }).catch((error)=>{\n      console.log(error)\n    })\n  };\n}\n"]},"metadata":{},"sourceType":"module"}